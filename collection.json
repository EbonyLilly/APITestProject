{
	"info": {
		"_postman_id": "2717a4fe-3cbd-4383-81cd-dbb25a05730f",
		"name": "To-do List Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Related Tests",
			"item": [
				{
					"name": "Register one user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "459364ae-69cc-4567-8232-4dc2accedd99",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userEmail\", jsonData.user.email);",
									"//console.log(jsonData.user.email);",
									"",
									"pm.environment.set(\"userRegisteratonToken\", jsonData.token);",
									"pm.environment.set(\"userID\", jsonData.user._id);",
									"//Test Cases",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"Journey12345\",\n\t\"age\": 20\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a738862-51c1-444a-9ab1-e707d47203fd",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userSessionToken\",jsonData.token);",
									"",
									"pm.test(\"The post request user session is status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{userEmail}}\",\n\t\"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info who is currently logged in ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "765e471e-e7c8-4d90-806c-4d7df336efe1",
								"exec": [
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout a user currently in session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aae86302-b7fa-4756-bf5b-e31e78ad52b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/user/logout",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update one user profile infomation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1aeb7929-821a-4528-8377-d52a099e1394",
								"exec": [
									"pm.test(\"Updated echo message contains new age\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"89\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegisteratonToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"age\": 89\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "User changes profile picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7d25e4e-229b-401e-ba21-35a19d33351d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegisteratonToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"type": "file",
									"src": "/Users/ebonylilly/Documents/avatarcandypic.jpg"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/user/me/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile picture",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/{{userID}}/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{userID}}",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user profile picture",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfa577da-aa2b-4a99-8886-ec485df556f4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegisteratonToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me/avatar",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete register one user ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegisteratonToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a user register information ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82d3f814-fa2e-4211-a735-c6aba785f83e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userRegisteratonToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/user/me",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Task Related Request",
			"item": [
				{
					"name": "Register one user for task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bef71949-5421-4021-931c-97931ff98f70",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userEmail\", jsonData.user.email);",
									"//console.log(jsonData.user.email);",
									"",
									"pm.environment.set(\"userRegisteratonToken\", jsonData.token);",
									"pm.environment.set(\"userID\", jsonData.user._id);",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"tasdkID\",jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{$randomFirstName}} {{$randomLastName}}\",\n\t\"email\": \"{{$randomEmail}}\",\n\t\"password\": \"Journey12345\",\n\t\"age\": 20\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as a user for task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33005ef5-0fa2-458d-b7aa-6a8741c5fc44",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userSessionToken\",jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{userEmail}}\",\n\t\"password\": \"{{userPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/user/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding a single to-do task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44e3bc27-0408-470b-9445-7c327e7b847f",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"{{$randomLoremParagraph}}\"\n}\n"
						},
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all the to-do of a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d001dfac-bb43-4994-98b1-74cef5b4c669",
								"exec": [
									"var jsonData = pm.response.json();",
									"var idOfTask = jsonData.data[0]._id;",
									"pm.environment.set(\"taskID\", idOfTask);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b95a0fa-49b1-4030-95af-ad6f5820cb25",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"taskID\", jsonData.data[0]._id)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the one task information by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad7c73d1-89a8-4d2c-ac90-c02fcf47bbd9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"completed\": true\n}\n\n"
						},
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update one existing request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1df42f3d-e2bb-4ebf-8cb2-39c5b04d0fdf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.completed).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"completed\": true\n}"
						},
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a task with complete status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb9915b9-913a-4b29-b854-13a284aac482",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task?completed=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "completed",
									"value": "true"
								},
								{
									"key": "ower",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get task do user that is not completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "520bdb5a-c490-4535-a76b-14531d285eb7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task?skip=10",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "skip",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cdde676-65ac-4b56-8737-a7d26603315c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task?completed=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task"
							],
							"query": [
								{
									"key": "completed",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get task by pagination ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75ddeab2-84c0-427c-ba1e-e1641a5e5755",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Delete  task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd1de994-c521-4669-a01e-2a6fdda6b6b0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userSessionToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/task/{{taskID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"task",
								"{{taskID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}